"use strict";(self.webpackChunktorq_docs=self.webpackChunktorq_docs||[]).push([[669],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(r),m=o,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},75:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return d}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),s=["components"],i={},c="Setup with Docker",l={unversionedId:"docker",id:"docker",title:"Setup with Docker",description:"The quickest way to run Torq is from a prebuilt docker image. This guide shows you how to set up and run Torq using Docker containers. You can also compile your own docker image following this guide.",source:"@site/docs/docker.md",sourceDirName:".",slug:"/docker",permalink:"/docs/docker",draft:!1,editUrl:"https://github.com/lncapital/torq/tree/main/packages/create-docusaurus/templates/shared/docs/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Setup with Docker Compose (recommended)",permalink:"/docs/docker-compose"}},u={},d=[{value:"Run TimescaleDB container",id:"run-timescaledb-container",level:3},{value:"Create a database and user for Torq",id:"create-a-database-and-user-for-torq",level:3},{value:"Docker Run Torq",id:"docker-run-torq",level:3}],p={toc:d};function m(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"setup-with-docker"},"Setup with Docker"),(0,a.kt)("p",null,"The quickest way to run Torq is from a prebuilt docker image. This guide shows you how to set up and run Torq using Docker containers. You can also compile your own docker image following this guide."),(0,a.kt)("h3",{id:"run-timescaledb-container"},"Run TimescaleDB container"),(0,a.kt)("p",null,"::: note"),(0,a.kt)("p",null,"If you already have a PostgreSQL database with TimescaleDB plugin you can skip to the next section (creating a database user)"),(0,a.kt)("p",null,":::"),(0,a.kt)("p",null,"Change ",(0,a.kt)("inlineCode",{parentName:"p"},"<DBPassword>")," to your prefered databse root password and start the Timescale DB container with this command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -d --name timescaledb -p 5432:5432 \\\n-v <AbsoluteDataPath>:/var/lib/postgresql/data \\\n-e POSTGRES_PASSWORD=<DBPassword> timescale/timescaledb:latest-pg14\n")),(0,a.kt)("h3",{id:"create-a-database-and-user-for-torq"},"Create a database and user for Torq"),(0,a.kt)("p",null,"Shell into the timescale container to run ",(0,a.kt)("inlineCode",{parentName:"p"},"psql"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker exec -it timescaledb bash\npsql -U postgres\n")),(0,a.kt)("p",null,"Inside the postgres interactive terminal run the following three SQL commands to create a database and user. Again change ",(0,a.kt)("inlineCode",{parentName:"p"},"<YourDbPassword>")," to your prefered password for the ",(0,a.kt)("inlineCode",{parentName:"p"},"torq")," database user."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE torq;\nCREATE USER torq WITH ENCRYPTED PASSWORD '<YourDbPassword>';\nGRANT ALL PRIVILEGES ON DATABASE torq TO torq;\n")),(0,a.kt)("p",null,"After creating the database, exit psql and the TimescaleDB container by hitting ",(0,a.kt)("inlineCode",{parentName:"p"},"CTRL d")," twice."),(0,a.kt)("h3",{id:"docker-run-torq"},"Docker Run Torq"),(0,a.kt)("p",null,"At present Torq only connects to a single LND node. To run Torq  provide the database password set above and a frontend password of your choice. Database name and user are configurable but both default to ",(0,a.kt)("inlineCode",{parentName:"p"},"torq"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -p 8080:8080 --rm  \\\n--add-host=host.docker.internal:host-gateway \\\nlncapital/torq \\\n--db.host host.docker.internal \\\n--db.password <YourDbPassword> \\\n--torq.password <ChooseYourFrontendPassword> \\\nstart\n")))}m.isMDXComponent=!0}}]);